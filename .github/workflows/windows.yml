name: Windows
on: [ push, pull_request ]

env:
  REPO: template-cpp
  GITHUB_REPO: Kubaaa96/template-cpp

jobs:
  windows:
    name: Windows
    runs-on: windows-2022
    strategy:
      matrix:
        CONFIG:
          - {
            BUILD_TYPE: Release
          }
          - {
            BUILD_TYPE: Debug
          }
          - {
            BUILD_TYPE: Release,
            CC: gcc,
            CXX: g++
          }
          - {
            BUILD_TYPE: Debug,
            CC: gcc,
            CXX: g++
          }
          - {
            BUILD_TYPE: Release,
            CC: clang,
            CXX: clang++
          }
          - {
            BUILD_TYPE: Debug,
            CC: clang,
            CXX: clang++
          }
    steps:
      - name: Install dependencies
        run: pip install conan==1.59.0 gcovr

      - name: Clone the git repo
        uses: actions/checkout@v2
        with:
          path: project
          fetch-depth: 50

      - name: Create project build directory
        working-directory: project
        run: |
          mkdir build

      - name: Configure project
        working-directory: project
        run: 
          if ([string]::IsNullOrEmpty("${{ matrix.CONFIG.CC }}"))
          {
            cmake . -Bbuild
                -G "Visual Studio 17 2022"
                -A x64
                -DCMAKE_BUILD_TYPE="${{ matrix.CONFIG.BUILD_TYPE }}"
                -DCMAKE_C_COMPILER="${{ matrix.CONFIG.CC }}"
                -DCMAKE_CXX_COMPILER="${{ matrix.CONFIG.CXX }}"
          }
          else
          {
            cmake . -Bbuild
                -G "MinGW Makefiles"
                -DCMAKE_BUILD_TYPE="${{ matrix.CONFIG.BUILD_TYPE }}"
                -DCMAKE_C_COMPILER="${{ matrix.CONFIG.CC }}"
                -DCMAKE_CXX_COMPILER="${{ matrix.CONFIG.CXX }}"
          }

      - name: Build project
        working-directory: project
        run: cmake --build ./build --config ${{ matrix.CONFIG.BUILD_TYPE }}

      - name: Run tests
        working-directory: project/build
        run: 
          if ("${{ matrix.CONFIG.BUILD_TYPE }}" -eq "Debug") 
          { 
            cd tests;
            ctest -C ${{ matrix.CONFIG.BUILD_TYPE }} --output-on-failure --timeout 540 } 
          else 
          { 
            Write-host "No test on Release Build type"
          }

      - name: Basic Coverage
        working-directory: project
        run:
          if ("${{ matrix.CONFIG.CC }}" -eq "gcc-12" -and "${{matrix.CONFIG.BUILD_TYPE}}" -eq "Debug") 
          { 
            gcovr -r . -f src/ -f include/ -e tests/ --exclude-throw-branches --exclude-unreachable-branches
          }
          else 
          { 
            Write-host "No coverage for anything different than GCC"
          }